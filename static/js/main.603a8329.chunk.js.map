{"version":3,"sources":["assets/sounds/beep.wav","serviceWorker.js","middleware/index.js","actions/api.js","actions/types.js","actions/creators.js","reducers/index.js","store/index.js","components/exercise/ExerciseControls.jsx","components/common/Header.jsx","components/common/Footer.jsx","components/ExerciseList.jsx","components/RoutineList.jsx","configuration/index.js","containers/Exercise.jsx","components/exercise/Exercise.jsx","containers/ExerciseList.jsx","containers/RoutineList.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","store","next","action","res","type","requestExerciseList","dispatch","a","requestExercises","fetch","process","then","json","data","console","log","receiveExercisesSuccess","catch","e","warn","receiveExercisesError","ActionTypes","REQUEST_EXERCISES","RECEIVE_EXERCISES_SUCCESS","RECEIVE_EXERCISES_ERROR","START_EXERCISE","STOP_EXERCISE","payload","error","startExercise","exercise","combineReducers","state","exerciseList","persistConfig","key","whitelist","storage","persistedReducer","persistReducer","rootReducer","ExerciseControls","props","play","playCallback","nextCallback","playClassName","classNames","className","onClick","Header","title","onCloseCallback","useCallback","Footer","children","ExerciseList","actions","routineId","params","id","history","useHistory","useEffect","firstExercise","goBack","map","name","push","RoutineList","breakExercise","image","image_alt","duration","order","connect","exerciseIndex","findIndex","item","nextExercise","length","config","bindActionCreators","ExerciseListActions","useState","seconds","setSeconds","setPlay","beeper","Audio","beepSound","muted","startNextExercise","setTimeout","beep","beepCount","addEventListener","handler","removeEventListener","interval","setInterval","clearInterval","src","alt","value","minValue","maxValue","text","routineList","RoutineListActions","initialState","middlewares","middleware","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","exact","path","component","Exercise","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,icCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oDCjBS,WAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAC,GAC9B,IAAMC,EAAMF,EAAKC,GAWjB,OALQA,EAAOE,KAKRD,K,yBCPIE,EAAsB,yDAAM,WAAOC,GAAP,SAAAC,EAAA,6DACvCD,EAASE,KAD8B,SAEjCC,MAAMC,oCACTC,MAAK,SAACR,GAAD,OAASA,EAAIS,UAClBD,MAAK,SAACE,GACLC,QAAQC,IAAI,cAAeF,GAC3BP,EAASU,EAAwBH,OAElCI,OAAM,SAACC,GACNJ,QAAQK,KAAK,oBAAqBD,GAClCZ,EAASc,EAAsB,4BAVI,2CAAN,uDCNtBC,EAAc,CACzBC,kBAAmB,oBACnBC,0BAA2B,4BAC3BC,wBAAyB,0BACzBC,eAAgB,iBAChBC,cAAe,iBCHV,SAASlB,IACd,MAAO,CACLJ,KAAMiB,EAAYC,mBAIf,SAASN,EAAwBH,GACtC,MAAO,CACLT,KAAMiB,EAAYE,0BAClBI,QAASd,GAIN,SAASO,EAAsBQ,GACpC,MAAO,CACLxB,KAAMiB,EAAYG,wBAClBG,QAASC,GAIN,SAASC,EAAcC,GAC5B,MAAO,CACL1B,KAAMiB,EAAYI,eAClBE,QAASG,GCIEC,gCAAgB,CAAED,SA1BjC,WAAuC,IAArBE,EAAoB,uDAAZ,GAAI9B,EAAQ,uCACpC,OAAQA,EAAOE,MACb,KAAKiB,EAAYI,eACf,OAAOvB,EAAOyB,QAEhB,KAAKN,EAAYK,cACf,MAAO,GAET,QACE,OAAOM,IAiB8BC,aAb3C,WAA2C,IAArBD,EAAoB,uDAAZ,GAAI9B,EAAQ,uCACxC,OAAQA,EAAOE,MACb,KAAKiB,EAAYE,0BACf,OAAOrB,EAAOyB,QAAQM,aAExB,KAAKZ,EAAYE,0BACf,MAAO,GAET,QACE,OAAOS,MCbPE,EAAgB,CACpBC,IAAK,OACLC,UAAW,CAAC,gBACZC,aAGIC,EAAmBC,YAAeL,EAAeM,G,2GCExCC,MAjBf,SAA0BC,GAAQ,IACxBC,EAAqCD,EAArCC,KAAMC,EAA+BF,EAA/BE,aAAcC,EAAiBH,EAAjBG,aAEtBC,EAAgBC,IAAW,CAC/B,2BAA4BJ,EAC5B,2BAA4BA,IAG9B,OACE,yBAAKK,UAAU,qBACb,0BAAMA,UAAU,gCAChB,0BAAMA,UAAWF,EAAeG,QAASL,IACzC,0BAAMI,UAAU,0BAA0BC,QAASJ,MCK1CK,MAlBf,SAAgBR,GAAQ,IACdS,EAA2BT,EAA3BS,MAAOC,EAAoBV,EAApBU,gBAETH,EAAUI,uBAAY,WAC1BvC,QAAQC,IAAI,eAAgBqC,GACG,oBAApBA,GACTA,MAED,CAACA,IAEJ,OACE,yBAAKJ,UAAU,UACb,yBAAKA,UAAU,gBAAgBG,GAC/B,0BAAMH,UAAU,2BAA2BC,QAASA,MCP3CK,MANf,SAAgBZ,GAAQ,IACda,EAAab,EAAba,SAER,OAAO,yBAAKP,UAAU,UAAUO,ICyCnBC,MAzCf,SAAsBd,GAAQ,IACpBT,EAA0BS,EAA1BT,aAAcwB,EAAYf,EAAZe,QAEhBC,EAAYhB,EAAM3C,MAAM4D,OAAOC,GAC/BC,EAAUC,cAEhBC,qBAAU,WACRN,EAAQpD,oBAAoBqD,KAC3B,IAEH,IAAMM,EAAgB/B,EAAa,GAcnC,OACE,yBAAKe,UAAU,iBACb,kBAAC,EAAD,CAAQG,MAAM,aAAaC,gBANR,WACrBS,EAAQI,YAMN,yBAAKjB,UAAU,uBACZf,EAAaiC,KAAI,SAACpC,GAAD,OAEhB,yBAAKK,IAAKL,EAAS8B,GAAIZ,UAAU,uBAAuBlB,EAASqC,UAIrE,kBAAC,EAAD,KACE,yBAAKnB,UAAU,uBAAuBC,QAvBtB,WAEpBQ,EAAQ5B,cAAcmC,GACtBH,EAAQO,KAAR,oBAA0BJ,EAAcJ,OAoBpC,YCpBOS,MAff,SAAqB3B,GACCA,EAAZe,QADmB,IAErBI,EAAUC,cAMhB,OACE,yBAAKd,UAAU,gBACb,yBAAKA,UAAU,UAAUC,QANP,WACpBY,EAAQO,KAAK,gBAKX,gBCfS,GACbE,cAAe,CACbV,IAAK,EACLO,KAAM,gBACNI,MAAO,YACPC,UAAW,gBACXC,SAAU,EACVC,OAAQ,ICyBGC,eAzBS,SAAC3C,GAAW,IAC1BF,EAA2BE,EAA3BF,SAAUG,EAAiBD,EAAjBC,aAEZ2C,EAAgB5C,EAAMC,aAAa4C,WACvC,SAACC,GAAD,OAAUA,EAAKlB,KAAO9B,EAAS8B,MAG7BmB,EAAe,KAKnB,OAJuB,IAAnBH,GAAwBA,IAAkB3C,EAAa+C,OAAS,IAClED,EAAe9C,EAAa2C,EAAgB,IAGvC,CACLK,SACAnD,WACAiD,mBAIuB,SAACzE,GAC1B,MAAO,CACLmD,QAASyB,6BAAmBC,EAAqB7E,MAItCqE,ECxBA,SAAkBjC,GAAQ,IAAD,EACR0C,mBAAS,IADD,mBAC/BC,EAD+B,KACtBC,EADsB,OAEdF,oBAAS,GAFK,mBAE/BzC,EAF+B,KAEzB4C,EAFyB,KAG9BzD,EAA4CY,EAA5CZ,SAAUiD,EAAkCrC,EAAlCqC,aAActB,EAAoBf,EAApBe,QAASwB,EAAWvC,EAAXuC,OACnCpB,EAAUC,cAEV0B,EAAS,IAAIC,MAAMC,KACzBF,EAAOG,OAAQ,EAKf,IAAMC,EAAoB,WACpBb,KACsB,IAApBjD,EAAS4C,MAEXmB,YAAW,WACTpC,EAAQ5B,cAAR,eACKoD,EAAOX,cADZ,CAEEV,GAAI9B,EAAS8B,MAEf0B,EAAWL,EAAOX,cAAcG,YAC/B,MAGHhB,EAAQ5B,cAAckD,GACtBO,EAAWP,EAAaN,aAS9B,SAASqB,EAAKC,GAWZP,EAAOQ,iBAAiB,SAVR,SAAVC,IACJT,EAAOU,oBAAoB,QAASD,GAEhCF,IACFD,EAAKC,EAAY,GAEjBH,QAKJJ,EAAO7C,OAkCT,OA/BAoB,qBAAU,WACR,GAAKsB,EAAL,CAKIA,EAAU,GACZS,IAGF,IAAMK,EAAWC,aAAY,WACvBzD,GACF2C,EAAWD,EAAU,KAItB,KAGH,OAAO,kBAAMgB,cAAcF,IAjBzBL,EAAK,KAkBN,CAACT,EAAS1C,IAYX,yBAAKK,UAAU,YACb,kBAAC,EAAD,CAAQG,MAAOrB,EAASqC,KAAMf,gBAXZ,WACpBtC,QAAQC,IAAI,SACZ8C,EAAQO,KAAK,QAWX,yBAAKpB,UAAU,kBACb,yBAAKA,UAAU,mBACb,yBACEsD,IAAK5F,wBAAsCoB,EAASyC,MACpDgC,IAAKzE,EAAS0C,aAGlB,yBAAKxB,UAAU,mBACb,kBAAC,IAAD,CACEwD,MAAOnB,EACPoB,SAAS,IACTC,SAAS,KACTC,KAAMtB,MAIZ,kBAAC,EAAD,KACE,kBAAC,EAAqB,CAAE1C,OAAMC,aAzBf,WACnB2C,GAAS5C,IAwBuCE,aAvE7B,WACnB+C,YCtBWjB,eAZS,SAAC3C,GACvB,MAAO,CACLC,aAAcD,EAAMC,iBAIG,SAAC3B,GAC1B,MAAO,CACLmD,QAASyB,6BAAmBC,EAAqB7E,MAItCqE,CAA6CnB,GCA7CmB,eAZS,SAAC3C,GACvB,MAAO,CACLC,aAAcD,EAAM4E,gBAIG,SAACtG,GAC1B,MAAO,CACLmD,QAASyB,6BAAmB2B,EAAoBvG,MAIrCqE,CAA6CN,G,EVE7C,WAA4C,IAApByC,EAAmB,uDAAJ,GAC9CC,EAAc,CAACC,EAAYC,KAC3BC,EAAqBC,kBAAe,WAAf,EAAmBJ,GAExCK,EAAoBC,8BAAoBH,GAExClH,EAAQsH,sBAAYhF,EAAkBwE,EAAcM,GACpDG,EAAYC,YAAaxH,GAE/B,MAAO,CAAEA,QAAOuH,aWlBWE,GAArBzH,E,EAAAA,MAAOuH,E,EAAAA,UAEfG,IAASC,OACP,kBAAC,IAAD,CAAU3H,MAAOA,GACf,kBAAC,IAAD,CAAa4H,QAAS,KAAML,UAAWA,GACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,4BAA4BC,UAAWvE,IACzD,kBAAC,IAAD,CAAOqE,OAAK,EAACC,KAAK,6BAA6BC,UAAWC,IAC1D,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,iBAAiBC,UAAW1D,QAKtD4D,SAASC,eAAe,SjB0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1H,MAAK,SAAA2H,GACJA,EAAaC,gBAEdtH,OAAM,SAAAW,GACLd,QAAQc,MAAMA,EAAM4G,c","file":"static/js/main.603a8329.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beep.9f760093.wav\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nexport default store => next => action => {\n  const res = next(action)\n  // const state = store.getState\n  // const dispatch = store.dispatch\n\n  // console.warn('HERE')\n\n  switch (action.type) {\n    default:\n      // console.warn('Unrecognized action: ' + action.type)\n  }\n\n  return res\n}","import {\n  requestExercises,\n  receiveExercisesSuccess,\n  receiveExercisesError,\n} from './index'\n\nexport const requestExerciseList = () => async (dispatch) => {\n  dispatch(requestExercises())\n  await fetch(process.env.PUBLIC_URL + '/exercise_list.json')\n    .then((res) => res.json())\n    .then((data) => {\n      console.log('fetced data', data)\n      dispatch(receiveExercisesSuccess(data))\n    })\n    .catch((e) => {\n      console.warn('data fetch errror', e)\n      dispatch(receiveExercisesError('Could not fetch data'))\n    })\n}\n","export const ActionTypes = {\n  REQUEST_EXERCISES: 'REQUEST_EXERCISES',\n  RECEIVE_EXERCISES_SUCCESS: 'RECEIVE_EXERCISES_SUCCESS',\n  RECEIVE_EXERCISES_ERROR: 'RECEIVE_EXERCISES_ERROR',\n  START_EXERCISE: 'START_EXERCISE',\n  STOP_EXERCISE: 'STOP_EXERCISE',\n}\n","import { ActionTypes } from './types'\n\nexport function requestExercises() {\n  return {\n    type: ActionTypes.REQUEST_EXERCISES,\n  }\n}\n\nexport function receiveExercisesSuccess(data) {\n  return {\n    type: ActionTypes.RECEIVE_EXERCISES_SUCCESS,\n    payload: data,\n  }\n}\n\nexport function receiveExercisesError(error) {\n  return {\n    type: ActionTypes.RECEIVE_EXERCISES_ERROR,\n    payload: error,\n  }\n}\n\nexport function startExercise(exercise) {\n  return {\n    type: ActionTypes.START_EXERCISE,\n    payload: exercise\n  }\n}","import { combineReducers } from 'redux'\nimport { ActionTypes } from '../actions'\n\nfunction exercise(state = {}, action) {\n  switch (action.type) {\n    case ActionTypes.START_EXERCISE:\n      return action.payload\n\n    case ActionTypes.STOP_EXERCISE:\n      return {}\n\n    default:\n      return state\n  }\n}\n\nfunction exerciseList(state = [], action) {\n  switch (action.type) {\n    case ActionTypes.RECEIVE_EXERCISES_SUCCESS:\n      return action.payload.exerciseList\n\n    case ActionTypes.RECEIVE_EXERCISES_SUCCESS:\n      return []\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ exercise, exerciseList })\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\n// import loggerMiddleware from '../middleware/logger'\nimport middleware from '../middleware'\nimport rootReducer from '../reducers'\n\n// define what keys should be persisted using whitelist to not persist\n// store keys that are not that useful\nconst persistConfig = {\n  key: 'root',\n  whitelist: ['exerciseList'],\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [middleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer)\n\n  const store = createStore(persistedReducer, initialState, composedEnhancers)\n  const persistor = persistStore(store)\n\n  return { store, persistor }\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction ExerciseControls(props) {\n  const { play, playCallback, nextCallback } = props\n\n  const playClassName = classNames({\n    'exercise-controls__play': !play,\n    'exercise-controls__pause': play,\n  })\n\n  return (\n    <div className=\"exercise-controls\">\n      <span className=\"exercise-controls__previous\"></span>\n      <span className={playClassName} onClick={playCallback}></span>\n      <span className=\"exercise-controls__next\" onClick={nextCallback}></span>\n    </div>\n  )\n}\n\nexport default ExerciseControls\n","import React, { useCallback } from 'react'\n\nfunction Header(props) {\n  const { title, onCloseCallback } = props\n\n  const onClick = useCallback(() => {\n    console.log('click', typeof onCloseCallback)\n    if (typeof onCloseCallback === 'function') {\n      onCloseCallback()\n    }\n  }, [onCloseCallback])\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__text\">{title}</div>\n      <span className=\"header__icon icon--close\" onClick={onClick}></span>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Footer(props) {\n  const { children } = props\n\n  return <div className=\"footer\">{children}</div>\n}\n\nexport default Footer\n","import React, { useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { Header, Footer } from './common'\n\nfunction ExerciseList(props) {\n  const { exerciseList, actions } = props\n\n  const routineId = props.match.params.id\n  const history = useHistory()\n\n  useEffect(() => {\n    actions.requestExerciseList(routineId)\n  }, [])\n\n  const firstExercise = exerciseList[0]\n  \n  const startExercise = () => {\n    // console.log('POOP-3', firstExercise)\n    actions.startExercise(firstExercise)\n    history.push(`/exercise/${firstExercise.id}`)\n  }\n\n  \n\n  const goBackCallback = () => {\n    history.goBack()\n  }\n\n  return (\n    <div className=\"exercise-list\">\n      <Header title=\"RA routine\" onCloseCallback={goBackCallback} />\n      <div className=\"exercise-list__body\">\n        {exerciseList.map((exercise) => (\n\n          <div key={exercise.id} className=\"exercise-list__item\">{exercise.name}</div>\n\n        ))}\n      </div>\n      <Footer>\n        <div className=\"exercise-list__start\" onClick={startExercise}>Start</div>\n      </Footer>\n    </div>\n  )\n}\n\nexport default ExerciseList\n","import React from 'react'\n// import Routine from './routine/Routine'\nimport { useCallback } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nfunction RoutineList(props) {\n  const { actions } = props\n  const history = useHistory()\n\n  const selectRoutine = () => {\n    history.push('/routine/1')\n  }\n\n  return (\n    <div className=\"routine-list\">\n      <div className=\"routine\" onClick={selectRoutine}>RA Routine</div>\n    </div>\n  )\n}\n\nexport default RoutineList\n","export default {\n  breakExercise: {\n    id: -1,\n    name: \"Take a Break!\",\n    image: 'break.png',\n    image_alt: 'Take a Break!',\n    duration: 5,\n    order: -1\n  }\n}","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Exercise } from '../components'\nimport config from '../configuration'\nimport * as ExerciseListActions from '../actions'\n\nconst mapStateToProps = (state) => {\n  const { exercise, exerciseList } = state\n\n  const exerciseIndex = state.exerciseList.findIndex(\n    (item) => item.id === exercise.id\n  )\n\n  let nextExercise = null\n  if (exerciseIndex !== -1 && exerciseIndex !== exerciseList.length - 1) {\n    nextExercise = exerciseList[exerciseIndex + 1]\n  }\n\n  return {\n    config,\n    exercise,\n    nextExercise,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(ExerciseListActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercise)\n","import React, { useState, useEffect } from 'react'\nimport beepSound from '../../assets/sounds/beep.wav'\nimport { CircularProgressbar } from 'react-circular-progressbar'\nimport 'react-circular-progressbar/dist/styles.css'\nimport { useHistory } from 'react-router-dom'\nimport ExerciseControls from './ExerciseControls'\nimport { Header, Footer } from '../common'\n\nexport default function Exercise(props) {\n  const [seconds, setSeconds] = useState(30)\n  const [play, setPlay] = useState(true)\n  const { exercise, nextExercise, actions, config } = props\n  const history = useHistory()\n\n  const beeper = new Audio(beepSound)\n  beeper.muted = false\n  // const picturePath = ''\n\n  // play and add an event listener for \"finished\", if no more plays, remove event listener\n\n  const startNextExercise = () => {\n    if (nextExercise) {\n      if (exercise.order !== -1) {\n        // shame:\n        setTimeout(function () {\n          actions.startExercise({\n            ...config.breakExercise,\n            id: exercise.id,\n          })\n          setSeconds(config.breakExercise.duration)\n        }, 500)\n      } else {\n        // start over\n        actions.startExercise(nextExercise)\n        setSeconds(nextExercise.duration)\n      }\n    }\n  }\n\n  const nextCallback = () => {\n    startNextExercise()\n  }\n\n  function beep(beepCount) {\n    const handler = () => {\n      beeper.removeEventListener('ended', handler)\n\n      if (beepCount) {\n        beep(beepCount - 1)\n\n        startNextExercise()\n      }\n    }\n\n    beeper.addEventListener('ended', handler)\n    beeper.play()\n  }\n\n  useEffect(() => {\n    if (!seconds) {\n      beep(1)\n      return\n    }\n\n    if (seconds < 6) {\n      beep()\n    }\n\n    const interval = setInterval(() => {\n      if (play) {\n        setSeconds(seconds - 1)\n      } else {\n        // what to do here?\n      }\n    }, 1000)\n\n    // clear interval on re-render\n    return () => clearInterval(interval)\n  }, [seconds, play])\n\n  const closeExercise = () => {\n    console.log('close')\n    history.push('/')\n  }\n\n  const playCallback = () => {\n    setPlay(!play)\n  }\n\n  return (\n    <div className=\"exercise\">\n      <Header title={exercise.name} onCloseCallback={closeExercise} />\n\n      <div className=\"exercise__body\">\n        <div className=\"exercise__image\">\n          <img\n            src={process.env.PUBLIC_URL + '/images/' + exercise.image}\n            alt={exercise.image_alt}\n          />\n        </div>\n        <div className=\"exercise__timer\">\n          <CircularProgressbar\n            value={seconds}\n            minValue=\"0\"\n            maxValue=\"30\"\n            text={seconds}\n          />\n        </div>\n      </div>\n      <Footer>\n        <ExerciseControls {...{ play, playCallback, nextCallback }} />\n      </Footer>\n    </div>\n  )\n}\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { ExerciseList } from '../components'\nimport * as ExerciseListActions from '../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    exerciseList: state.exerciseList,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(ExerciseListActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExerciseList)\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { RoutineList } from '../components'\nimport * as RoutineListActions from '../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    exerciseList: state.routineList,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(RoutineListActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoutineList)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './scss/index.scss'\nimport { Exercise, ExerciseList, RoutineList } from './containers'\n\nconst { store, persistor } = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/migr-routine/routine/:id\" component={ExerciseList} />\n          <Route exact path=\"/migr-routine/exercise/:id\" component={Exercise} />\n          <Route exact path=\"/migr-routine/\" component={RoutineList} />\n        </Switch>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}