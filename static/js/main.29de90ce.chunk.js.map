{"version":3,"sources":["serviceWorker.js","middleware/index.js","actions/api.js","actions/types.js","actions/creators.js","reducers/index.js","store/index.js","components/exercise/ExerciseControls.jsx","components/common/Header.jsx","components/common/Footer.jsx","utils/index.js","components/exercise/ExerciseListItem.jsx","components/exercise/ExerciseList.jsx","components/Exercises.jsx","components/routine/Routine.jsx","components/Routines.jsx","configuration/index.js","constants/index.js","containers/Exercise.jsx","components/exercise/Exercise.jsx","containers/Exercises.jsx","containers/Routines.jsx","index.js"],"names":["Boolean","window","location","hostname","match","store","next","action","res","type","requestRoutinesData","dispatch","a","requestRoutines","fetch","process","then","json","data","console","log","receiveRoutinesSuccess","catch","e","warn","receiveRoutinesError","ActionTypes","REQUEST_EXERCISES","RECEIVE_EXERCISES_SUCCESS","RECEIVE_EXERCISES_ERROR","ORDER_EXERCISES","SET_EXERCISE_DURATION","REQUEST_ROUTINES","RECEIVE_ROUTINES_SUCCESS","RECEIVE_ROUTINES_ERROR","ORDER_ROUTINES","START_EXERCISE","STOP_EXERCISE","payload","error","orderRoutines","orderExercises","startExercise","exercise","setExerciseDuration","defaultExerciseState","previous","current","combineReducers","state","exercises","routines","reduce","acc","routine","id","routineId","length","exerciseId","duration","map","omit","persistConfig","key","whitelist","storage","persistedReducer","persistReducer","rootReducer","React","memo","props","play","playCallback","nextCallback","previousCallback","disabled","controlsClassName","classNames","playClassName","className","onClick","Footer","children","getAudioManager","AudioManager","Audio","playSound","sound","callback","numTimes","audio","src","handler","removeEventListener","addEventListener","handleDragEnd","result","list","destination","index","source","orderedList","startIndex","endIndex","Array","from","splice","removed","reorder","ExerciseListItem","actions","draggableId","toString","provided","ListGroupItem","ref","innerRef","draggableProps","dragHandleProps","name","DropdownButton","as","ButtonGroup","drop","variant","title","onSelect","Dropdown","Item","eventKey","ExerciseList","onExerciseClick","setExercisesCallback","onDragEnd","droppableId","ListGroup","droppableProps","selectExercise","placeholder","Exercises","history","useHistory","Jumbotron","fluid","Container","Button","push","Routine","selectRoutine","onSelectRoutine","Card","border","Body","Title","Text","description","Routines","useEffect","setRoutinesCallback","onRoutineClick","Row","Col","Image","CardGroup","breakExercise","image","image_alt","getNextExercise","exerciseList","config","previousExerciseIndex","findIndex","item","connect","ownProps","get","previousExercise","nextExercise","bindActionCreators","ExerciseListActions","useState","seconds","setSeconds","setPlay","soundPlaying","setSoundPlaying","useCallback","closeCallback","interval","setInterval","clearInterval","onCloseCallback","alt","value","minValue","maxValue","text","styles","buildStyles","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","to","ExercisesActions","RoutineActions","initialState","middlewares","middleware","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","exact","path","component","Exercise","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.29de90ce.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default (store) => (next) => (action) => {\n  const res = next(action)\n  // const state = store.getState\n  // const dispatch = store.dispatch\n\n  switch (action.type) {\n    default:\n    // console.warn('Unrecognized action: ' + action.type)\n  }\n\n  return res\n}\n","import {\n  requestRoutines,\n  receiveRoutinesSuccess,\n  receiveRoutinesError,\n} from './index'\n\nexport const requestRoutinesData = () => async (dispatch) => {\n  dispatch(requestRoutines())\n  await fetch(process.env.PUBLIC_URL + '/data.json')\n    .then((res) => res.json())\n    .then((data) => {\n      console.log('fetced data', data)\n      dispatch(receiveRoutinesSuccess(data))\n    })\n    .catch((e) => {\n      console.warn('data fetch error', e)\n      dispatch(receiveRoutinesError('Could not fetch data'))\n    })\n}\n","export const ActionTypes = {\n  REQUEST_EXERCISES: 'REQUEST_EXERCISES',\n  RECEIVE_EXERCISES_SUCCESS: 'RECEIVE_EXERCISES_SUCCESS',\n  RECEIVE_EXERCISES_ERROR: 'RECEIVE_EXERCISES_ERROR',\n  ORDER_EXERCISES: 'ORDER_EXERCISES',\n  SET_EXERCISE_DURATION: 'SET_EXERCISE_DURATION', \n\n  REQUEST_ROUTINES: 'REQUEST_ROUTINES',\n  RECEIVE_ROUTINES_SUCCESS: 'RECEIVE_ROUTINES_SUCCESS',\n  RECEIVE_ROUTINES_ERROR: 'RECEIVE_ROUTINES_ERROR',\n  ORDER_ROUTINES: 'ORDER_ROUTINES',\n\n  START_EXERCISE: 'START_EXERCISE',\n  STOP_EXERCISE: 'STOP_EXERCISE',\n}\n","import { ActionTypes } from './types'\n\nexport function requestRoutines() {\n  return {\n    type: ActionTypes.REQUEST_ROUTINES,\n  }\n}\n\nexport function receiveRoutinesSuccess(data) {\n  return {\n    type: ActionTypes.RECEIVE_ROUTINES_SUCCESS,\n    payload: data,\n  }\n}\n\nexport function receiveRoutinesError(error) {\n  return {\n    type: ActionTypes.RECEIVE_ROUTINES_ERROR,\n    payload: error,\n  }\n}\n\nexport function orderRoutines(data) {\n  return {\n    type: ActionTypes.ORDER_ROUTINES,\n    payload: data\n  }\n}\n\nexport function orderExercises(data) {\n  return {\n    type: ActionTypes.ORDER_EXERCISES,\n    payload: data\n  }\n}\n\nexport function startExercise(exercise) {\n  return {\n    type: ActionTypes.START_EXERCISE,\n    payload: exercise\n  }\n}\n\nexport function setExerciseDuration(data) {\n  return {\n    type: ActionTypes.SET_EXERCISE_DURATION,\n    payload: data\n  }\n}","import { combineReducers } from 'redux'\nimport { ActionTypes } from '../actions'\nimport { omit } from 'lodash'\n\n// keep track of previous exercise\nconst defaultExerciseState = { previous: null, current: null }\nfunction exercise(state = defaultExerciseState, action) {\n  switch (action.type) {\n    case ActionTypes.START_EXERCISE:\n      return state.current === null\n        ? { ...state, current: action.payload }\n        : { previous: state.current, current: action.payload }\n\n    case ActionTypes.STOP_EXERCISE:\n      return defaultExerciseState\n\n    default:\n      return state\n  }\n}\n\nfunction routines(state = [], action) {\n  switch (action.type) {\n    case ActionTypes.RECEIVE_ROUTINES_SUCCESS:\n      return action.payload.routines.map((routine) =>\n        omit(routine, 'exercises')\n      )\n\n    case ActionTypes.ORDER_ROUTINES:\n      return state.length === action.payload.length ? action.payload : state\n\n    default:\n      return state\n  }\n}\n\nfunction exercises(state = {}, action) {\n  switch (action.type) {\n    case ActionTypes.RECEIVE_ROUTINES_SUCCESS:\n      return action.payload.routines.reduce((acc, routine) => {\n        return {\n          ...acc,\n          [routine.id]: routine.exercises,\n        }\n      }, {})\n\n    case ActionTypes.ORDER_EXERCISES:\n      const { routineId, exercises } = action.payload\n\n      return {\n        ...state,\n        [routineId]:\n          state[routineId].length === exercises.length ? exercises : state,\n      }\n\n    case ActionTypes.SET_EXERCISE_DURATION: {\n      const { routineId, exerciseId, duration } = action.payload\n\n      return {\n        ...state,\n        [routineId]: state[routineId].map((exercise) =>\n          exercise.id === exerciseId ? { ...exercise, duration } : exercise\n        ),\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ exercise, exercises, routines })\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\n// import loggerMiddleware from '../middleware/logger'\nimport middleware from '../middleware'\nimport rootReducer from '../reducers'\n\n// define what keys should be persisted using whitelist to not persist\n// store keys that are not that useful\nconst persistConfig = {\n  key: 'root',\n  whitelist: ['routines', 'exercises'],\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [middleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer)\n\n  const store = createStore(persistedReducer, initialState, composedEnhancers)\n  const persistor = persistStore(store)\n\n  return { store, persistor }\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction ExerciseControls(props) {\n  const { play, playCallback, nextCallback, previousCallback, disabled } = props\n\n  const controlsClassName = classNames('exercise-controls', {\n    'exercise-controls--disabled': disabled,\n  })\n  const playClassName = classNames({\n    'exercise-controls__play': !play,\n    'exercise-controls__pause': play,\n  })\n\n  const onPlay = () => {\n    if (disabled) return\n\n    playCallback()\n  }\n\n  return (\n    <div className={controlsClassName}>\n      <span\n        className=\"exercise-controls__previous\"\n        onClick={previousCallback}\n      ></span>\n      <span className={playClassName} onClick={onPlay}></span>\n      <span className=\"exercise-controls__next\" onClick={nextCallback}></span>\n    </div>\n  )\n}\n\nexport default React.memo(ExerciseControls)\n","import React from 'react'\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"header__title\">Migr Exercise Routines</div>\n      <div className=\"header__nav\">\n        <div className=\"header__nav-item\">About</div>\n        <div className=\"header__nav-item\">Login</div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Header)\n","import React from 'react'\n\nfunction Footer(props) {\n  const { children } = props\n\n  return <div className=\"footer\">{children}</div>\n}\n\nexport default Footer\n","export const getAudioManager = () => {\n  if (!window.AudioManager) {\n    window.AudioManager = new Audio()\n  }\n\n  return window.AudioManager\n}\n\nfunction playSound(sound, callback, numTimes = 1) {\n  if (!sound) {\n    console.warn('Sound: ' + sound + ' was not found')\n    return\n  }\n\n  const audio = getAudioManager()\n  audio.src = process.env.PUBLIC_URL + '/sounds/' + sound\n\n  const handler = () => {\n    audio.removeEventListener('ended', handler)\n    numTimes = numTimes - 1\n\n    if (numTimes === 0) {\n      if (typeof callback === 'function') {\n        callback()\n      }\n    } else {\n      audio.addEventListener('ended', handler)\n      audio.play()\n    }\n  }\n\n  audio.addEventListener('ended', handler)\n  audio.play()\n}\n\n// reorder function, used in the fancy drag and drop\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\n// abstract what happend on drag end with fancy drag and drop\nfunction handleDragEnd(result, list, callback) {\n  if (!result.destination) {\n    return\n  }\n\n  if (result.destination.index === result.source.index) {\n    return\n  }\n\n  const orderedList = reorder(\n    list,\n    result.source.index,\n    result.destination.index\n  )\n\n  if (typeof callback === 'function') {\n    callback(orderedList)\n  }\n}\n\nexport { playSound, reorder, handleDragEnd }\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport {\n  ListGroupItem,\n  Dropdown,\n  DropdownButton,\n  ButtonGroup,\n} from 'react-bootstrap'\n\nfunction ExerciseListItem({ actions, routineId, exercise, index }) {\n  return (\n    <Draggable draggableId={exercise.id.toString()} index={index}>\n      {(provided) => (\n        <ListGroupItem\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div className=\"exercise-list-item\">\n            <div className=\"exercise-list-item__name\">{exercise.name}</div>\n            <div className=\"exercise-list-item__duration\">\n              <DropdownButton\n                as={ButtonGroup}\n                key={`${exercise.id}-duration`}\n                id={`dropdown-button-drop-duration`}\n                drop=\"down\"\n                variant=\"secondary\"\n                title={` Duration: ${exercise.duration} `}\n                onSelect={(duration) => {\n                  actions.setExerciseDuration({\n                    routineId,\n                    exerciseId: exercise.id,\n                    duration,\n                  })\n                }}\n              >\n                <Dropdown.Item eventKey=\"15\">15</Dropdown.Item>\n                <Dropdown.Item eventKey=\"30\">30</Dropdown.Item>\n                <Dropdown.Item eventKey=\"45\">45</Dropdown.Item>\n                <Dropdown.Item eventKey=\"60\">60</Dropdown.Item>\n              </DropdownButton>\n            </div>\n          </div>\n        </ListGroupItem>\n      )}\n    </Draggable>\n  )\n}\n\nexport default ExerciseListItem\n","import React from 'react'\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { ListGroup } from 'react-bootstrap'\n\nimport { handleDragEnd } from '../../utils'\n\nimport ExerciseListItem from './ExerciseListItem'\n\nfunction ExerciseList({ actions, routineId, exercises, onExerciseClick }) {\n  const setExercisesCallback = (exercises) => {\n    actions.orderExercises({ routineId, exercises })\n  }\n\n  const onDragEnd = (result) => {\n    handleDragEnd(result, exercises, setExercisesCallback)\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\">\n        {(provided) => (\n          <ListGroup ref={provided.innerRef} {...provided.droppableProps}>\n            {exercises.map((exercise, index) => (\n              <ExerciseListItem\n                {...{\n                  actions,\n                  exercise,\n                  routineId,\n                  index,\n                  key: exercise.id,\n                  selectExercise: onExerciseClick,\n                }}\n              />\n            ))}\n            {provided.placeholder}\n          </ListGroup>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}\n\nexport default ExerciseList\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { Container, Jumbotron, Button } from 'react-bootstrap'\n\nimport { getAudioManager } from '../utils'\nimport { Header } from './common'\nimport ExerciseList from './exercise/ExerciseList'\n\nfunction Exercises(props) {\n  const { exercises, routineId, actions } = props\n\n  const history = useHistory()\n\n  const startExercise = () => {\n    // safari hack to provide audio for the rest of the app\n    getAudioManager()\n\n    const exercise = exercises[0]\n\n    if (exercise) {\n      actions.startExercise(exercise)\n      history.push(\n        process.env.PUBLIC_URL + `/routine/${routineId}/exercise/${exercise.id}`\n      )\n    }\n  }\n\n  return (\n    <div className=\"exercises\">\n      <Header />\n      <Jumbotron fluid>\n        <Container>\n          <h2>Start your exercise by pressing start button!</h2>\n          <p>\n            You can change the order of exercises by dragging them around until\n            you are completely happy with the new order\n          </p>\n          <p>\n            <Button variant=\"secondary\" onClick={startExercise}>\n              Start routine!\n            </Button>\n          </p>\n        </Container>\n      </Jumbotron>\n      <ExerciseList {...{ actions, exercises, routineId }} />\n    </div>\n  )\n}\n\nexport default Exercises\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { Button, Card } from 'react-bootstrap'\n\nfunction Routine({ routine, index, selectRoutine }) {\n  const onSelectRoutine = () => {\n    selectRoutine(routine.id)\n  }\n\n  return (\n    <Draggable draggableId={routine.id.toString()} index={index}>\n      {(provided) => (\n        <Card\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          border=\"light\"\n        >\n          <Card.Body>\n            <Card.Title>{routine.name}</Card.Title>\n            <Card.Text>{routine.description}</Card.Text>\n            <Button variant=\"primary\" onClick={onSelectRoutine}>\n              Start routine!\n            </Button>\n          </Card.Body>\n        </Card>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Routine\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { Header } from './common'\nimport {\n  Container,\n  CardGroup,\n  Jumbotron,\n  Row,\n  Col,\n  Image,\n} from 'react-bootstrap'\n\nimport Routine from './routine/Routine'\n\nimport { handleDragEnd } from '../utils'\n\nfunction Routines({ actions, routines }) {\n  const history = useHistory()\n\n  useEffect(() => {\n    actions.requestRoutinesData()\n  }, [actions])\n\n  const setRoutinesCallback = (routines) => {\n    actions.orderRoutines(routines)\n  }\n\n  const onRoutineClick = (routineId) => {\n    history.push(process.env.PUBLIC_URL + '/routine/' + routineId)\n  }\n\n  const onDragEnd = (result) => {\n    handleDragEnd(result, routines, setRoutinesCallback)\n  }\n\n  return (\n    <div className=\"routines\">\n      <Header />\n      <Jumbotron fluid>\n        <Container fluid>\n          <Row className=\"align-items-center\">\n            <Col>\n              <h2>Start your exercise by selecting one of the routines!</h2>\n              <p>\n                Select one of the available routines and start your exercise!\n                More routines will be available soonish\n              </p>\n            </Col>\n            <Col>\n              <Image src={process.env.PUBLIC_URL + '/images/logo.png'} fluid />\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"list\">\n          {(provided) => (\n            <CardGroup ref={provided.innerRef} {...provided.droppableProps}>\n              {routines.map((routine, index) => (\n                <Routine\n                  routine={routine}\n                  index={index}\n                  key={routine.id}\n                  selectRoutine={onRoutineClick}\n                />\n              ))}\n              {provided.placeholder}\n            </CardGroup>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  )\n}\n\nexport default Routines\n","import { BREAK_EXERCISE } from '../constants'\n\nexport default {\n  breakExercise: {\n    id: -1,\n    name: 'Take a Break!',\n    image: 'break.png',\n    image_alt: 'Take a Break!',\n    sound: 'break.mp3',\n    duration: 5,\n    type: BREAK_EXERCISE,\n  },\n}\n","export const BREAK_DURATION = 5\nexport const BREAK_EXERCISE = 'BREAK_EXERCISE'","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Exercise } from '../components'\nimport config from '../configuration'\nimport { BREAK_EXERCISE } from '../constants'\nimport * as ExerciseListActions from '../actions'\n\nimport { get } from 'lodash'\n\n// get next exercise in line\nfunction getNextExercise(exercise, exerciseList) {\n  if (!exercise.current) {\n    return null\n  }\n\n  if (exercise.current.type !== BREAK_EXERCISE) {\n    return config.breakExercise\n  }\n\n  const previousExerciseIndex = exerciseList.findIndex(\n    (item) => item.id === exercise.previous.id\n  )\n\n  return exerciseList[previousExerciseIndex + 1]\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { exercise, exercises } = state\n\n  const routineId = get(ownProps, 'match.params.routineId')\n\n  return {\n    config,\n    routineId,\n    exercise: exercise.current,\n    previousExercise: exercise.previous,\n    nextExercise: getNextExercise(exercise, exercises[routineId]),\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(ExerciseListActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercise)\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar'\nimport 'react-circular-progressbar/dist/styles.css'\nimport { useHistory, Redirect } from 'react-router-dom'\nimport ExerciseControls from './ExerciseControls'\nimport { Header, Footer } from '../common'\n\nimport { playSound } from '../../utils'\nimport { get } from 'lodash'\n\nexport default function Exercise({ exercise, nextExercise, actions }) {\n  const [seconds, setSeconds] = useState(get(exercise, 'duration', 30))\n  const [play, setPlay] = useState(false)\n  const [soundPlaying, setSoundPlaying] = useState(false)\n  const history = useHistory()\n\n  const startExercise = useCallback(\n    (exercise) => {\n      if (exercise) {\n        setPlay(false)\n        setSeconds(exercise.duration)\n        actions.startExercise(exercise)\n      }\n    },\n    [actions]\n  )\n\n  const nextCallback = useCallback(() => {\n    startExercise(nextExercise)\n  }, [startExercise, nextExercise])\n\n  const previousCallback = useCallback(() => {\n    startExercise(exercise)\n  }, [startExercise, exercise])\n\n  const playCallback = useCallback(() => {\n    setPlay(!play)\n  }, [play])\n\n  const closeCallback = useCallback(() => {\n    history.push(`${process.env.PUBLIC_URL}/`)\n  }, [history])\n\n  useEffect(() => {\n    // check if there is an exercise\n    if (!exercise) {\n      return\n    }\n\n    if (seconds === exercise.duration && !play) {\n      setSoundPlaying(true)\n      playSound(exercise.sound, () => {\n        setPlay(true)\n        setSoundPlaying(false)\n      })\n    }\n\n    if (seconds === 0 && play) {\n      playSound('beep.wav', nextCallback, 2)\n    }\n\n    if (seconds < 5 && seconds !== 0) {\n      playSound('beep.wav')\n    }\n\n    const interval = setInterval(() => {\n      if (play) {\n        setSeconds(seconds - 1)\n      }\n    }, 1000)\n\n    // clear interval on re-render\n    return () => clearInterval(interval)\n  }, [exercise, nextCallback, seconds, play])\n\n  if (!exercise) {\n    // in case the exercise was not found, redirect to main page\n    return <Redirect to={`${process.env.PUBLIC_URL}/`} />\n  }\n\n  return (\n    <div className=\"exercise\">\n      <Header title={exercise.name} onCloseCallback={closeCallback} />\n\n      <div className=\"exercise__body\">\n        <div className=\"exercise__image\">\n          <img\n            src={process.env.PUBLIC_URL + '/images/' + exercise.image}\n            alt={exercise.image_alt}\n          />\n        </div>\n        <div className=\"exercise__timer\">\n          <CircularProgressbar\n            value={seconds}\n            minValue=\"0\"\n            maxValue={exercise.duration}\n            text={seconds}\n            styles={buildStyles({\n              strokeLinecap: 'butt',\n              textSize: '16px',\n              pathTransitionDuration: 0.5,\n              pathColor: `rgba(62, 152, 199, ${seconds / 100})`,\n              textColor: '#f88',\n              trailColor: '#d6d6d6',\n              backgroundColor: '#3e98c7',\n            })}\n          />\n        </div>\n      </div>\n      <Footer>\n        <ExerciseControls\n          {...{\n            play,\n            playCallback,\n            nextCallback,\n            previousCallback,\n            disabled: soundPlaying,\n          }}\n        />\n      </Footer>\n    </div>\n  )\n}\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { get } from 'lodash'\n\nimport { Exercises } from '../components'\nimport * as ExercisesActions from '../actions'\n\nconst mapStateToProps = (state, ownProps) => {\n  const routineId = get(ownProps, 'match.params.routineId')\n  const exercises = get(state, ['exercises', routineId], [])\n\n  return {\n    routineId,\n    exercises,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(ExercisesActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercises)\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Routines } from '../components'\nimport * as RoutineActions from '../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    routines: state.routines,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(RoutineActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routines)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './scss/index.scss'\nimport { Exercise, Exercises, Routines } from './containers'\n\nconst { store, persistor } = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/routine/:routineId'}\n            component={Exercises}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/routine/:routineId/exercise/:exerciseId'}\n            component={Exercise}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/'}\n            component={Routines}\n          />\n        </Switch>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}