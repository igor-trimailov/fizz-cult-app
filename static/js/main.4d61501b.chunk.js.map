{"version":3,"sources":["serviceWorker.js","middleware/index.js","actions/api.js","actions/types.js","actions/creators.js","constants/index.js","configuration/index.js","reducers/index.js","store/index.js","components/exercise/ExerciseControls.jsx","components/common/Translate.jsx","components/common/Header.jsx","components/common/Footer.jsx","components/common/ScrollToTop.jsx","utils/index.js","components/exercise/ExerciseListItem.jsx","components/exercise/ExerciseList.jsx","components/Exercises.jsx","components/routine/Routine.jsx","components/Routines.jsx","containers/Exercise.jsx","components/exercise/Exercise.jsx","containers/Exercises.jsx","containers/Routines.jsx","containers/Header.jsx","components/exercise/ExerciseFinished.jsx","index.js"],"names":["Boolean","window","location","hostname","match","store","next","action","res","type","requestRoutinesData","dispatch","a","requestRoutines","fetch","process","then","json","data","console","log","receiveRoutinesSuccess","catch","e","warn","receiveRoutinesError","ActionTypes","REQUEST_EXERCISES","RECEIVE_EXERCISES_SUCCESS","RECEIVE_EXERCISES_ERROR","ORDER_EXERCISES","SET_EXERCISE_DURATION","FINISH_EXERCISE","REQUEST_ROUTINES","RECEIVE_ROUTINES_SUCCESS","RECEIVE_ROUTINES_ERROR","ORDER_ROUTINES","START_EXERCISE","STOP_EXERCISE","SWITCH_LOCALE","payload","error","orderRoutines","orderExercises","startExercise","exercise","setExerciseDuration","switchLocale","finishExercise","defaultLocale","availableLocales","code","name","breakExercise","id","image","image_alt","sound","duration","defaultLocaleState","config","map","locale","selected","defaultExerciseState","previous","current","combineReducers","locales","state","exercises","routines","reduce","acc","routine","routineId","length","exerciseId","omit","persistConfig","key","whitelist","storage","persistedReducer","persistReducer","rootReducer","React","memo","props","play","playCallback","nextCallback","previousCallback","disabled","controlsClassName","classNames","playClassName","className","onClick","translations","en_GB","header","title","nav","about","login","jumbotron","h1","p","buttons","start","button","finished","body","footer","ru_RU","Translate","selectedLocale","useSelector","find","lt","item","get","LocaleSwitcher","actions","OverlayTrigger","placement","overlay","Popover","Content","preventDefault","stopPropagation","src","alt","Footer","children","ScrollToTop","pathname","useLocation","useEffect","scrollTo","getAudioManager","AudioManager","Audio","playSound","callback","numTimes","audio","handler","removeEventListener","addEventListener","handleDragEnd","result","list","destination","index","source","orderedList","startIndex","endIndex","Array","from","splice","removed","reorder","ExerciseListItem","draggableId","toString","provided","ListGroupItem","ref","innerRef","draggableProps","dragHandleProps","DropdownButton","as","ButtonGroup","drop","variant","onSelect","Dropdown","Item","eventKey","ExerciseList","onExerciseClick","setExercisesCallback","onDragEnd","droppableId","ListGroup","droppableProps","selectExercise","placeholder","Exercises","history","useHistory","Jumbotron","fluid","Container","Button","push","Routine","selectRoutine","onSelectRoutine","Card","border","Body","Title","Text","description","Routines","setRoutinesCallback","onRoutineClick","Image","CardGroup","getNextExercise","exerciseList","findIndex","previousExerciseIndex","connect","ownProps","previousExercise","nextExercise","bindActionCreators","ExerciseListActions","useState","seconds","setSeconds","setPlay","soundPlaying","setSoundPlaying","useCallback","interval","setInterval","clearInterval","value","minValue","maxValue","text","styles","buildStyles","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","to","ExercisesActions","RoutineActions","HeaderActions","Header","ExerciseFinished","initialState","middlewares","middleware","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","onUpdate","exact","path","component","Exercise","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4d61501b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default (store) => (next) => (action) => {\n  const res = next(action)\n  // const state = store.getState\n  // const dispatch = store.dispatch\n\n  switch (action.type) {\n    default:\n    // console.warn('Unrecognized action: ' + action.type)\n  }\n\n  return res\n}\n","import {\n  requestRoutines,\n  receiveRoutinesSuccess,\n  receiveRoutinesError,\n} from './index'\n\nexport const requestRoutinesData = () => async (dispatch) => {\n  dispatch(requestRoutines())\n  await fetch(process.env.PUBLIC_URL + '/data.json')\n    .then((res) => res.json())\n    .then((data) => {\n      console.log('fetced data', data)\n      dispatch(receiveRoutinesSuccess(data))\n    })\n    .catch((e) => {\n      console.warn('data fetch error', e)\n      dispatch(receiveRoutinesError('Could not fetch data'))\n    })\n}\n","export const ActionTypes = {\n  REQUEST_EXERCISES: 'REQUEST_EXERCISES',\n  RECEIVE_EXERCISES_SUCCESS: 'RECEIVE_EXERCISES_SUCCESS',\n  RECEIVE_EXERCISES_ERROR: 'RECEIVE_EXERCISES_ERROR',\n  ORDER_EXERCISES: 'ORDER_EXERCISES',\n  SET_EXERCISE_DURATION: 'SET_EXERCISE_DURATION',\n  FINISH_EXERCISE: 'FINISH_EXERCISE',\n\n  REQUEST_ROUTINES: 'REQUEST_ROUTINES',\n  RECEIVE_ROUTINES_SUCCESS: 'RECEIVE_ROUTINES_SUCCESS',\n  RECEIVE_ROUTINES_ERROR: 'RECEIVE_ROUTINES_ERROR',\n  ORDER_ROUTINES: 'ORDER_ROUTINES',\n\n  START_EXERCISE: 'START_EXERCISE',\n  STOP_EXERCISE: 'STOP_EXERCISE',\n\n  SWITCH_LOCALE: 'SWITCH_LOCALE',\n}\n","import { ActionTypes } from './types'\n\nexport function requestRoutines() {\n  return {\n    type: ActionTypes.REQUEST_ROUTINES,\n  }\n}\n\nexport function receiveRoutinesSuccess(data) {\n  return {\n    type: ActionTypes.RECEIVE_ROUTINES_SUCCESS,\n    payload: data,\n  }\n}\n\nexport function receiveRoutinesError(error) {\n  return {\n    type: ActionTypes.RECEIVE_ROUTINES_ERROR,\n    payload: error,\n  }\n}\n\nexport function orderRoutines(data) {\n  return {\n    type: ActionTypes.ORDER_ROUTINES,\n    payload: data,\n  }\n}\n\nexport function orderExercises(data) {\n  return {\n    type: ActionTypes.ORDER_EXERCISES,\n    payload: data,\n  }\n}\n\nexport function startExercise(exercise) {\n  return {\n    type: ActionTypes.START_EXERCISE,\n    payload: exercise,\n  }\n}\n\nexport function setExerciseDuration(data) {\n  return {\n    type: ActionTypes.SET_EXERCISE_DURATION,\n    payload: data,\n  }\n}\n\nexport function switchLocale(data) {\n  return {\n    type: ActionTypes.SWITCH_LOCALE,\n    payload: data,\n  }\n}\n\nexport function finishExercise() {\n  return {\n    type: ActionTypes.FINISH_EXERCISE,\n  }\n}\n","export const BREAK_DURATION = 5\nexport const BREAK_EXERCISE = 'BREAK_EXERCISE'","import { BREAK_EXERCISE } from '../constants'\n\nexport default {\n  defaultLocale: 'en_GB',\n  availableLocales: [\n    {\n      code: 'en_GB',\n      name: 'English'\n    },\n    {\n      code: 'ru_RU',\n      name: 'Русский'\n    },\n  ],\n  breakExercise: {\n    id: -1,\n    name: 'Take a Break!',\n    image: 'break.png',\n    image_alt: 'Take a Break!',\n    sound: 'break.mp3',\n    duration: 5,\n    type: BREAK_EXERCISE,\n  },\n}\n","import { combineReducers } from 'redux'\nimport { ActionTypes } from '../actions'\nimport config from '../configuration'\nimport { omit } from 'lodash'\n\nconst defaultLocaleState = config.availableLocales.map((locale) => {\n  return {\n    ...locale,\n    selected: locale.code === config.defaultLocale,\n  }\n})\nfunction locales(state = defaultLocaleState, action) {\n  switch (action.type) {\n    case ActionTypes.SWITCH_LOCALE:\n      return state.map(locale => {\n        return {\n          ...locale,\n          selected: locale.code === action.payload\n        }\n      })\n    default:\n      return state\n  }\n}\n\n// keep track of previous exercise\nconst defaultExerciseState = { previous: null, current: null }\nfunction exercise(state = defaultExerciseState, action) {\n  switch (action.type) {\n    case ActionTypes.START_EXERCISE:\n      return state.current === null\n        ? { ...state, current: action.payload }\n        : { previous: state.current, current: action.payload }\n\n    case ActionTypes.STOP_EXERCISE:\n    case ActionTypes.FINISH_EXERCISE:\n      return defaultExerciseState\n\n    default:\n      return state\n  }\n}\n\nfunction routines(state = [], action) {\n  switch (action.type) {\n    case ActionTypes.RECEIVE_ROUTINES_SUCCESS:\n      return action.payload.routines.map((routine) =>\n        omit(routine, 'exercises')\n      )\n\n    case ActionTypes.ORDER_ROUTINES:\n      return state.length === action.payload.length ? action.payload : state\n\n    default:\n      return state\n  }\n}\n\nfunction exercises(state = {}, action) {\n  switch (action.type) {\n    case ActionTypes.RECEIVE_ROUTINES_SUCCESS:\n      return action.payload.routines.reduce((acc, routine) => {\n        return {\n          ...acc,\n          [routine.id]: routine.exercises,\n        }\n      }, {})\n\n    case ActionTypes.ORDER_EXERCISES:\n      const { routineId, exercises } = action.payload\n\n      return {\n        ...state,\n        [routineId]:\n          state[routineId].length === exercises.length ? exercises : state,\n      }\n\n    case ActionTypes.SET_EXERCISE_DURATION: {\n      const { routineId, exerciseId, duration } = action.payload\n\n      return {\n        ...state,\n        [routineId]: state[routineId].map((exercise) =>\n          exercise.id === exerciseId ? { ...exercise, duration } : exercise\n        ),\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({ locales, exercise, exercises, routines })\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\n// import loggerMiddleware from '../middleware/logger'\nimport middleware from '../middleware'\nimport rootReducer from '../reducers'\n\n// define what keys should be persisted using whitelist to not persist\n// store keys that are not that useful\nconst persistConfig = {\n  key: 'root',\n  whitelist: ['locales', 'routines', 'exercises'],\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default function configureStore(initialState = {}) {\n  const middlewares = [middleware, thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const composedEnhancers = composeWithDevTools(middlewareEnhancer)\n\n  const store = createStore(persistedReducer, initialState, composedEnhancers)\n  const persistor = persistStore(store)\n\n  return { store, persistor }\n}\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction ExerciseControls(props) {\n  const { play, playCallback, nextCallback, previousCallback, disabled } = props\n\n  const controlsClassName = classNames('exercise-controls', {\n    'exercise-controls--disabled': disabled,\n  })\n  const playClassName = classNames({\n    'exercise-controls__play': !play,\n    'exercise-controls__pause': play,\n  })\n\n  const onPlay = () => {\n    if (disabled) return\n\n    playCallback()\n  }\n\n  return (\n    <div className={controlsClassName}>\n      <span\n        className=\"exercise-controls__previous\"\n        onClick={previousCallback}\n      ></span>\n      <span className={playClassName} onClick={onPlay}></span>\n      <span className=\"exercise-controls__next\" onClick={nextCallback}></span>\n    </div>\n  )\n}\n\nexport default React.memo(ExerciseControls)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { get } from 'lodash'\n\nconst translations = {\n  en_GB: {\n    header: {\n      title: 'Exercise Routines',\n      nav: {\n        about: 'About',\n        login: 'Login',\n      },\n    },\n    routines: {\n      jumbotron: {\n        h1: 'Start your exercise by selecting one of the routines!',\n        p:\n          'Select one of the available routines and start your exercise! More routines will be available soonish',\n      },\n      routine: {\n        buttons: {\n          start: 'Start exercise!',\n        },\n      },\n    },\n    exercises: {\n      jumbotron: {\n        h1: 'Start your exercise by pressing start button!',\n        p:\n          'You can change the order of exercises by dragging them around. There will be a 5s break between exercises. Good Luck!',\n        button: 'Start exercise!',\n      },\n      exercise: {\n        duration: 'Duration',\n        finished: {\n          header: 'Congratulations!',\n          body:\n            'If you feel like you can take on another routine, click on the button below. Otherwise we will see you next time!',\n          button: 'Go back to routines',\n        },\n      },\n    },\n    footer: null,\n  },\n  ru_RU: {\n    header: {\n      title: 'ФизКультАпп',\n      nav: {\n        about: 'О нас',\n        login: 'Вход',\n      },\n    },\n    routines: {\n      jumbotron: {\n        h1: 'Начни упражнения выбрав один из представленных режимов!',\n        p:\n          'Чтобы начать упражнения, выбери один из представленных ниже режимов',\n      },\n      routine: {\n        buttons: {\n          start: 'Начать упражнения!',\n        },\n      },\n    },\n    exercises: {\n      jumbotron: {\n        h1: 'Начни зарядку нажав кнопку старт!',\n        p:\n          'Порядок упражнений можно изменить перетаскивая их пальцем. Между упражнениями будет 5-секундный перерыв. Физкульт привет!',\n        button: 'Старт!',\n      },\n      exercise: {\n        duration: 'Продолжительность',\n        finished: {\n          header: 'Молодец!',\n          body:\n            'Остался избыток сил на ещё одну зарядку? Жми кнопку ниже и выбирай следующую зарядку! А если нет, то увидимся в следующий раз',\n          button: 'Обратно к упражнениям',\n        },\n      },\n    },\n    footer: null,\n  },\n}\n\nfunction Translate(props) {\n  const locales = useSelector((state) => state.locales)\n  const selectedLocale = locales.find((locale) => locale.selected)\n\n  const { lt, item } = props\n\n  if (lt) {\n    return <span>{get(translations, `${selectedLocale.code}.${lt}`)}</span>\n  }\n\n  if (item) {\n    return (\n      <span>\n        {typeof item === 'string' ? item : get(item, selectedLocale.code)}\n      </span>\n    )\n  }\n\n  return <span>Undefined</span>\n}\n\nexport default Translate\n","import React from 'react'\nimport Translate from '../common/Translate'\nimport { OverlayTrigger, Popover } from 'react-bootstrap'\n\nfunction LocaleSwitcher({ actions, locales }) {\n  const selectedLocale = locales.find((locale) => locale.selected)\n\n  return (\n    <div className=\"locale-switcher\">\n      <OverlayTrigger\n        placement=\"left\"\n        overlay={\n          <Popover id={'popover-locale'}>\n            <Popover.Content>\n              <div className=\"locale-switcher__locale-list\">\n                {locales.map((locale) => (\n                  <div\n                    className=\"locale-switcher__locale\"\n                    key={`locale-${locale.code}`}\n                    onClick={(e) => {\n                      e.preventDefault()\n                      e.stopPropagation()\n                      actions.switchLocale(locale.code)\n                    }}\n                  >\n                    <div className=\"locale-switcher__locale-flag\">\n                      <img\n                        src={\n                          process.env.PUBLIC_URL +\n                          `/images/flag/${locale.code}.png`\n                        }\n                        alt={locale.name}\n                      />\n                    </div>\n                    <div className=\"locale-switcher__locale-name\">\n                      {locale.name}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Popover.Content>\n          </Popover>\n        }\n      >\n        <img\n          src={\n            process.env.PUBLIC_URL + `/images/flag/${selectedLocale.code}.png`\n          }\n          alt={selectedLocale.name}\n        />\n      </OverlayTrigger>\n    </div>\n  )\n}\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <div className=\"header__title\">\n        <Translate lt=\"header.title\" />\n      </div>\n      <div className=\"header__nav\">\n        <div className=\"header__nav-item\">\n          <Translate lt=\"header.nav.about\" />\n        </div>\n        <div className=\"header__nav-item\">\n          <Translate lt=\"header.nav.login\" />\n        </div>\n        <div className=\"header__nav-item\">\n          <LocaleSwitcher {...props} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Header)\n","import React from 'react'\n\nfunction Footer(props) {\n  const { children } = props\n\n  return <div className=\"footer\">{children}</div>\n}\n\nexport default Footer\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","export const getAudioManager = () => {\n  if (!window.AudioManager) {\n    window.AudioManager = new Audio()\n  }\n\n  return window.AudioManager\n}\n\nfunction playSound(sound, callback, numTimes = 1) {\n  if (!sound) {\n    console.warn('Sound: ' + sound + ' was not found')\n    return\n  }\n\n  const audio = getAudioManager()\n  audio.src = process.env.PUBLIC_URL + '/sounds/' + sound\n\n  const handler = () => {\n    audio.removeEventListener('ended', handler)\n    numTimes = numTimes - 1\n\n    if (numTimes === 0) {\n      if (typeof callback === 'function') {\n        callback()\n      }\n    } else {\n      audio.addEventListener('ended', handler)\n      audio.play()\n    }\n  }\n\n  audio.addEventListener('ended', handler)\n  audio.play()\n}\n\n// reorder function, used in the fancy drag and drop\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\n// abstract what happend on drag end with fancy drag and drop\nfunction handleDragEnd(result, list, callback) {\n  if (!result.destination) {\n    return\n  }\n\n  if (result.destination.index === result.source.index) {\n    return\n  }\n\n  const orderedList = reorder(\n    list,\n    result.source.index,\n    result.destination.index\n  )\n\n  if (typeof callback === 'function') {\n    callback(orderedList)\n  }\n}\n\nexport { playSound, reorder, handleDragEnd }\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport {\n  ListGroupItem,\n  Dropdown,\n  DropdownButton,\n  ButtonGroup,\n} from 'react-bootstrap'\n\nimport Translate from '../common/Translate'\n\nfunction ExerciseListItem({ actions, routineId, exercise, index, locale }) {\n  return (\n    <Draggable draggableId={exercise.id.toString()} index={index}>\n      {(provided) => (\n        <ListGroupItem\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <div className=\"exercise-list-item\">\n            <div className=\"exercise-list-item__name\">\n              <Translate item={exercise.name} />\n            </div>\n            <div className=\"exercise-list-item__duration\">\n              <DropdownButton\n                as={ButtonGroup}\n                key={`${exercise.id}-duration`}\n                id={`dropdown-button-drop-duration`}\n                drop=\"down\"\n                variant=\"secondary\"\n                title={\n                  <Translate\n                    item={{\n                      en_GB: `${exercise.duration} s`,\n                      ru_RU: `${exercise.duration} сек`,\n                    }}\n                  />\n                }\n                onSelect={(duration) => {\n                  actions.setExerciseDuration({\n                    routineId,\n                    exerciseId: exercise.id,\n                    duration,\n                  })\n                }}\n              >\n                <Dropdown.Item eventKey=\"15\">15</Dropdown.Item>\n                <Dropdown.Item eventKey=\"30\">30</Dropdown.Item>\n                <Dropdown.Item eventKey=\"45\">45</Dropdown.Item>\n                <Dropdown.Item eventKey=\"60\">60</Dropdown.Item>\n              </DropdownButton>\n            </div>\n          </div>\n        </ListGroupItem>\n      )}\n    </Draggable>\n  )\n}\n\nexport default ExerciseListItem\n","import React from 'react'\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { ListGroup } from 'react-bootstrap'\n\nimport { handleDragEnd } from '../../utils'\n\nimport ExerciseListItem from './ExerciseListItem'\n\nfunction ExerciseList({ actions, routineId, exercises, onExerciseClick, locale }) {\n  const setExercisesCallback = (exercises) => {\n    actions.orderExercises({ routineId, exercises })\n  }\n\n  const onDragEnd = (result) => {\n    handleDragEnd(result, exercises, setExercisesCallback)\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\">\n        {(provided) => (\n          <ListGroup ref={provided.innerRef} {...provided.droppableProps}>\n            {exercises.map((exercise, index) => (\n              <ExerciseListItem\n                {...{\n                  actions,\n                  locale,\n                  exercise,\n                  routineId,\n                  index,\n                  key: exercise.id,\n                  selectExercise: onExerciseClick,\n                }}\n              />\n            ))}\n            {provided.placeholder}\n          </ListGroup>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}\n\nexport default ExerciseList\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { Container, Jumbotron, Button } from 'react-bootstrap'\n\nimport { getAudioManager } from '../utils'\nimport Translate from './common/Translate'\nimport ExerciseList from './exercise/ExerciseList'\n\nfunction Exercises(props) {\n  const { exercises, routineId, actions, locale } = props\n\n  const history = useHistory()\n\n  const startExercise = () => {\n    // safari hack to provide audio for the rest of the app\n    getAudioManager()\n\n    const exercise = exercises[0]\n\n    if (exercise) {\n      actions.startExercise(exercise)\n      history.push(\n        process.env.PUBLIC_URL + `/routine/${routineId}/exercise/${exercise.id}`\n      )\n    }\n  }\n\n  return (\n    <div className=\"exercises\">\n      <Jumbotron fluid>\n        <Container>\n          <h1>\n            <Translate lt=\"exercises.jumbotron.h1\" />\n          </h1>\n          <p>\n            <Translate lt=\"exercises.jumbotron.p\" />\n          </p>\n          <p>\n            <Button variant=\"secondary\" onClick={startExercise}>\n              <Translate lt=\"exercises.jumbotron.button\" />\n            </Button>\n          </p>\n        </Container>\n      </Jumbotron>\n      <ExerciseList {...{ actions, exercises, routineId, locale }} />\n    </div>\n  )\n}\n\nexport default Exercises\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { Button, Card } from 'react-bootstrap'\n\nimport Translate from '../common/Translate'\n\nfunction Routine({ routine, index, selectRoutine }) {\n  const onSelectRoutine = () => {\n    selectRoutine(routine.id)\n  }\n\n  return (\n    <Draggable draggableId={routine.id.toString()} index={index}>\n      {(provided) => (\n        <Card\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          border=\"light\"\n        >\n          <Card.Body>\n            <Card.Title>\n              <Translate item={routine.name} />\n            </Card.Title>\n            <Card.Text>\n              <Translate item={routine.description} />\n            </Card.Text>\n            <Button variant=\"primary\" onClick={onSelectRoutine}>\n              <Translate lt={'routines.routine.buttons.start'} />\n            </Button>\n          </Card.Body>\n        </Card>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Routine\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { Container, CardGroup, Jumbotron, Image } from 'react-bootstrap'\n\nimport Routine from './routine/Routine'\nimport Translate from '../components/common/Translate'\n\nimport { handleDragEnd } from '../utils'\n\nfunction Routines({ actions, routines }) {\n  const history = useHistory()\n\n  useEffect(() => {\n    actions.requestRoutinesData()\n  }, [actions])\n\n  const setRoutinesCallback = (routines) => {\n    actions.orderRoutines(routines)\n  }\n\n  const onRoutineClick = (routineId) => {\n    history.push(process.env.PUBLIC_URL + '/routine/' + routineId)\n  }\n\n  const onDragEnd = (result) => {\n    handleDragEnd(result, routines, setRoutinesCallback)\n  }\n\n  return (\n    <div className=\"routines\">\n      <Jumbotron fluid>\n        <Container>\n          <div className=\"routines__jumbotron\">\n            <div className=\"routines__jumbotron-text\">\n              <h2>\n                <Translate lt=\"routines.jumbotron.h1\" />\n              </h2>\n              <p>\n                <Translate lt=\"routines.jumbotron.p\" />\n              </p>\n            </div>\n            <div className=\"routines__jumbotron-image\">\n              <Image src={process.env.PUBLIC_URL + '/images/logo.png'} fluid />\n            </div>\n          </div>\n        </Container>\n      </Jumbotron>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"list\">\n          {(provided) => (\n            <CardGroup ref={provided.innerRef} {...provided.droppableProps}>\n              {routines.map((routine, index) => (\n                <Routine\n                  routine={routine}\n                  index={index}\n                  key={routine.id}\n                  selectRoutine={onRoutineClick}\n                />\n              ))}\n              {provided.placeholder}\n            </CardGroup>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  )\n}\n\nexport default Routines\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Exercise } from '../components'\nimport config from '../configuration'\nimport { BREAK_EXERCISE } from '../constants'\nimport * as ExerciseListActions from '../actions'\n\nimport { get } from 'lodash'\n\n// get next exercise in line\nfunction getNextExercise(exercise, exerciseList) {\n  if (!exercise.current) {\n    return null\n  }\n\n  const exerciseIndex = exerciseList.findIndex(\n    (item) => item.id === exercise.current.id\n  )\n\n  // no need for break after last exercise\n  if (exerciseIndex === exerciseList.length - 1) {\n    return null\n  }\n\n\n  if (exercise.current.type !== BREAK_EXERCISE) {\n    return config.breakExercise\n  }\n\n  const previousExerciseIndex = exerciseList.findIndex(\n    (item) => item.id === exercise.previous.id\n  )\n\n  return exerciseList[previousExerciseIndex + 1]\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { exercise, exercises } = state\n\n  const routineId = get(ownProps, 'match.params.routineId')\n\n  return {\n    config,\n    routineId,\n    exercise: exercise.current,\n    previousExercise: exercise.previous,\n    nextExercise: getNextExercise(exercise, exercises[routineId]),\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(ExerciseListActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercise)\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar'\nimport 'react-circular-progressbar/dist/styles.css'\nimport { Redirect } from 'react-router-dom'\nimport ExerciseControls from './ExerciseControls'\nimport { Footer } from '../common'\nimport Translate from '../common/Translate'\n\nimport { playSound } from '../../utils'\nimport { get } from 'lodash'\n\nexport default function Exercise({ exercise, nextExercise, actions }) {\n  const [seconds, setSeconds] = useState(get(exercise, 'duration', 30))\n  const [play, setPlay] = useState(false)\n  const [soundPlaying, setSoundPlaying] = useState(false)\n\n  const startExercise = useCallback(\n    (exercise) => {\n      if (exercise) {\n        setPlay(false)\n        setSeconds(exercise.duration)\n        actions.startExercise(exercise)\n      } else {\n        setPlay(false)\n        actions.finishExercise()\n      }\n    },\n    [actions]\n  )\n\n  const nextCallback = useCallback(() => {\n    startExercise(nextExercise)\n  }, [startExercise, nextExercise])\n\n  const previousCallback = useCallback(() => {\n    startExercise(exercise)\n  }, [startExercise, exercise])\n\n  const playCallback = useCallback(() => {\n    setPlay(!play)\n  }, [play])\n\n  useEffect(() => {\n    // check if there is an exercise\n    if (!exercise) {\n      return\n    }\n\n    if (seconds === exercise.duration && !play) {\n      setSoundPlaying(true)\n      playSound(exercise.sound, () => {\n        setPlay(true)\n        setSoundPlaying(false)\n      })\n    }\n\n    if (seconds === 0 && play) {\n      playSound('beep.wav', nextCallback, 2)\n    }\n\n    if (seconds < 5 && seconds !== 0) {\n      playSound('beep.wav')\n    }\n\n    const interval = setInterval(() => {\n      if (play) {\n        setSeconds(seconds - 1)\n      }\n    }, 1000)\n\n    // clear interval on re-render\n    return () => clearInterval(interval)\n  }, [exercise, nextCallback, seconds, play])\n\n  if (!exercise) {\n    // in case the exercise was not found, redirect to main page\n    return <Redirect to={`${process.env.PUBLIC_URL}/finished`} />\n  }\n\n  return (\n    <div className=\"exercise\">\n      <div className=\"exercise__header\">\n        <Translate item={exercise.name} />\n      </div>\n      <div className=\"exercise__body\">\n        <div className=\"exercise__image\">\n          <img\n            src={process.env.PUBLIC_URL + '/images/' + exercise.image}\n            alt={exercise.image_alt}\n          />\n        </div>\n        <div className=\"exercise__timer\">\n          <CircularProgressbar\n            value={seconds}\n            minValue=\"0\"\n            maxValue={exercise.duration}\n            text={seconds}\n            styles={buildStyles({\n              strokeLinecap: 'butt',\n              textSize: '20px',\n              pathTransitionDuration: 0.5,\n              pathColor: '#13a0c3',\n              textColor: '#13a0c3',\n              trailColor: '#d6d6d6',\n              backgroundColor: '#3e98c7',\n            })}\n          />\n        </div>\n      </div>\n      <Footer>\n        <ExerciseControls\n          {...{\n            play,\n            playCallback,\n            nextCallback,\n            previousCallback,\n            disabled: soundPlaying,\n          }}\n        />\n      </Footer>\n    </div>\n  )\n}\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { get } from 'lodash'\n\nimport { Exercises } from '../components'\nimport * as ExercisesActions from '../actions'\n\nconst mapStateToProps = (state, ownProps) => {\n  const routineId = get(ownProps, 'match.params.routineId')\n  const exercises = get(state, ['exercises', routineId], [])\n  const locale = state.locales.find((locale) => locale.selected)\n\n  return {\n    routineId,\n    exercises,\n    locale,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(ExercisesActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exercises)\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Routines } from '../components'\nimport * as RoutineActions from '../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    routines: state.routines,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(RoutineActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routines)\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { Header } from '../components/common'\nimport * as HeaderActions from '../actions'\n\nconst mapStateToProps = (state) => {\n  return {\n    locales: state.locales,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(HeaderActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nimport Translate from '../common/Translate'\n\nfunction ExerciseFinished() {\n  const history = useHistory()\n\n  const goBack = () => {\n    history.push(`${process.env.PUBLIC_URL}/`)\n  }\n\n  return (\n    <div className=\"exercise-finished\">\n      <div className=\"exercise-finished__header\">\n        <Translate lt=\"exercises.exercise.finished.header\" />\n      </div>\n      <div className=\"exercise-finished__body\">\n        <Translate lt=\"exercises.exercise.finished.body\" />\n      </div>\n      <div className=\"exercise-finished__footer\">\n        <Button onClick={goBack}>\n          <Translate lt=\"exercises.exercise.finished.button\" />\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default ExerciseFinished\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport './scss/index.scss'\nimport { Exercise, Exercises, Routines, Header } from './containers'\nimport { ScrollToTop } from './components/common'\nimport ExerciseFinished from './components/exercise/ExerciseFinished'\n\nconst { store, persistor } = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Header />\n      <Router onUpdate={() => window.scrollTo(0, 0)}>\n        <ScrollToTop />\n        <Switch>\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/routine/:routineId'}\n            component={Exercises}\n          />\n          <Route\n            exact\n            path={\n              process.env.PUBLIC_URL +\n              '/routine/:routineId/exercise/:exerciseId'\n            }\n            component={Exercise}\n          />\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/finished'}\n            component={ExerciseFinished}\n          />\n\n          <Route\n            exact\n            path={process.env.PUBLIC_URL + '/'}\n            component={Routines}\n          />\n        </Switch>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}